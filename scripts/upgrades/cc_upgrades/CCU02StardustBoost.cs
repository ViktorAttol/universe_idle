using Godot;
using System;

/// <Summary>
/// Upgrade increases the amount of stardust generated per second.
/// </Summary>
public partial class CCU02StardustBoost : Upgrade
{
	private int maxLevel = 5;
	
	public CCU02StardustBoost() : base(Game.Instance.Data.CCUpgrades.U02StardustBoostLevel, 1){
		CalculateCost();
		if(!IsUnlocked()) HandlerCCUpgrades.Instance.U01StardustGeneration.UpgradeLevelUp += OnCCU01LevelUp;
	}
	
	private String[] levelsInRomanNumbers = {"", "I", "II", "III", "IV", "V"};
	
	public override String GetTitle(){
		String text = "Stardust Generator Efficiency " + levelsInRomanNumbers[level];
		return text;
	}
	
	/// Returns an String with the description of the upgrade.
	public override String GetDescription(){
		String text = "Increases the amount of Stardust generated by the Universe Core. \n" +
			"Effect: +1 stardust / sec";
		if(level < maxLevel) text += "\nCost: " + cost + " Consciousness Core";
		
		return text;
	}
	
	/// Calculates the cost for the current upgrade.
	public override void CalculateCost(){
		cost = baseCost;
	}
	
	/// Returns bool if upgrade can be bought.
	public override bool CanAfford(){
		if(Game.Instance.Data.ConsciousnessCore >= cost && level < maxLevel) return true;
		return false;
	}
	
	/// Consumes consciousness cores to level up.
	public override void LevelUp(){
		if(level >= maxLevel) return;
		bool success = HandlerConsciousnessCore.Instance.ConsumeConsciousnessCores(cost);
		if(!success) return;
		level ++;
		//GD.Print("level: " + level);
		Game.Instance.Data.CCUpgrades.U02StardustBoostLevel = level;
		
		HandlerCCUpgrades.Instance.OnCCUpgradeLevelUp(this);
		//EmitSignal(nameof(UpgradeLevelUp));
		EmitSignal(SignalName.UpgradeLevelUp);
	}
	
	/// Returns weather or not the upgrade has been unlocked..
	public override bool IsUnlocked(){
		if(Game.Instance.Data.CCUpgrades.U01StardustGeneration) return true;
		return false;
	}
	
	/// Triggered wehen CCU01 leveled up.
	private void OnCCU01LevelUp(){
		HandlerCCUpgrades.Instance.U01StardustGeneration.UpgradeLevelUp -= OnCCU01LevelUp; 
		HandlerCCUpgrades.Instance.OnUpgradeUnlocked(this);
	}
	
	/// Returns weather or not the upgrade has been disabled.
	public override bool IsDisabled(){
		if(level >= maxLevel) return true;
		return false;
	}
}
